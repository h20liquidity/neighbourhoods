/*op meta*/
@0x37042217d6e1a50790fcea19503943302d7779a9b47d61dcadf07ffecc4c0812

/*ob meta*/
@0x56ffc3fc82109c33f1e1544157a70144fc15e7c6e9ae9c65a636fd165b1bc51c
/* Calculate IO */

#calculate-source
/* refuse any counterparties other than named . This will be the arb contract instance address. */
allowed-counterparty: 0x1F8Cd7FB14b6930665EaaA5F5C71b9e7396df036,
: ensure(eq(allowed-counterparty counterparty-address())),

/* 1 hour delay on new batches = 3600 seconds */
batch-start-info-k: order-hash(),
batch-start-info: get(batch-start-info-k),
batch-start-time: decode-256<32 32>(batch-start-info),
: ensure(gt(now() int-add(batch-start-time 3600))),

/* get info about current batch */
batch-index batch-remaining: call<2 2>(0),

/*
 * Exponential growth
 * A * (1 + r)^x
 * A = initial ratio
 * r = % increase per batch
 * x = batch index
 */
io-ratio: decimal18-mul(29e13 decimal18-pow-int(101e16 batch-index)),

amount ratio: decimal18-div(batch-remaining io-ratio) io-ratio

/*
 * Handle IO
 * Actual order size available here after cross referencing counterparty order
 */
#handle-source
batch-start-info-k: order-hash(),
total-received-k: hash(order-hash()),

/* new batch info due to trade */
in-token-amount: vault-input-balance-increase(),
in-token-decimals: vault-input-token-decimals(),
new-total-received new-batch-index _: call<2 3>(scale-18-dynamic<0 1>(in-token-decimals in-token-amount)),

/* stored batch info */
batch-start-info: get(batch-start-info-k),
batch-start-index: decode-256<0 32>(batch-start-info),
batch-start-time: decode-256<32 32>(batch-start-info),

/* if we're in a new batch record current time as batch start time */
:set(
  batch-start-info-k
  if(
    gt(new-batch-index batch-start-index)
    encode-256<32 32>(now() encode-256<0 32>(new-batch-index 0))
    batch-start-info)),
:set(total-received-k new-total-received)

/* Calculate batch */
#calculate-batch
new-received:,
total-received-k: hash(order-hash()),
amount-per-batch: 100e18,
new-total-amount-received: int-add(get(total-received-k) new-received),
/* use the flooring from integer division to simply batch the order */
new-batch-index: int-div(new-total-amount-received amount-per-batch),
new-batch-remaining: int-sub(
  int-mul(
    int-add(new-batch-index 1)
    amount-per-batch)
  new-total-amount-received)

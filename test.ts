import * as path from "path";  
import { solidityKeccak256,  hexlify } from "ethers/lib/utils";
// import { ExpressionConfig, rlc, MetaStore } from "@rainprotocol/rainlang";
import fs from "fs"  
import { ExpressionConfig, MetaStore, getRainlangCompletion, rainlangc } from "@rainprotocol/rainlang";
import { BigNumber, ethers } from "ethers";  
import axios from "axios" ;
import { Alchemy, Network } from "alchemy-sdk"; 

/**
 * @public
 * Builds sources and constants from a rainlang expression.
 *
 * @param expressionString - rainlang expression
 * @returns sources and constants
 */
// export const standardEvaluableConfig = async (
//     expression: string
//   ): Promise<ExpressionConfig> => { 
//     console.log("opmeta :",opMetaHash) ;
//     const store = new MetaStore();
//     await store.updateStore(opMetaHash);
  
//     return await getRainlangCompletion(expression, store)
//       .then((expressionConfig) => {
//         return expressionConfig;
//       })
//       .catch((error) => {
//         throw new Error(JSON.stringify(error, null, 2));
//       });
//   }; 
  
  /**
   * @returns A hex string which is the keccak256 hash of opmeta
   */
  export const getOpMetaHash = (): string => {
    return solidityKeccak256(["bytes"], [""]);
  };
  
  /**
   * @returns Keccak256 OpMetaHash
   */
  export const opMetaHash = getOpMetaHash(); 

export const fetchFile = (_path: string): string => {
    try {
      return fs.readFileSync(_path).toString();
    } catch (error) {
      console.log(error);
      return "";
    }
  };   


// async function test(){ 

//     //Building Expression
//     const strategyExpression = path.resolve(
//         __dirname,
//         "./src/2-price-update.rain"
//       ); 
  
//     const strategyString = await fetchFile(strategyExpression);  
  
//     // const arbCounterParty = contractConfig.contracts[network].zeroexorderbookinstance.address 
//     // console.log("arbCounterParty: ",arbCounterParty)
      
//     console.log("here : ")
//     const { sources, constants } = await standardEvaluableConfig(strategyString)   

//     console.log("sources : " , sources )

// } 
// test() 

// async function redOpMeta(){
//   let str = "" 
//   console.log(str.toLocaleLowerCase())

// } 

// redOpMeta() 

async function test3(){ 

   //Building Expression
   const strategyExpression = path.resolve(
    __dirname,
    "./src/2-price-update.rain"
  ); 

const strategyString = await fetchFile(strategyExpression);    

    console.log("opmeta here:",opMetaHash) ;
    const store = new MetaStore();
    await store.updateStore(opMetaHash);  
   let res =  await rainlangc(strategyString,["calculate-source","handle-source","calculate-batch"],store) 
   console.log("res : " , res)

} 
// test3() 

async function test4(){ 

  const config = {
    apiKey: "WLWVvo6m4MXAZ3GkzmMI8ZnLIg_bBNaO", // Replace with your API key
    network: Network.MATIC_MAINNET, // Replace with your network
  };
  
  // Creates an Alchemy object instance with the config to use for making requests
  const alchemy = new Alchemy(config); 

  //Call the method to return the recommended fee data to use in a transaction.
  const gasDataForPolygon = await alchemy.core.getFeeData()  

  console.log("gasDataForPolygon : " , gasDataForPolygon.gasPrice?.toString() ) 

  let res = await axios.get(
    "https://api.blocknative.com/gasprices/blockprices?chainid=137",
    {headers: {
        "Authorization" : "49281639-8d0e-4d3c-a55a-71f18585deef"
      }
    }
  )  
  // console.log("res.data : ",  res.data) 
  let gasPrice = ethers.utils.parseUnits(`${res.data.blockPrices[0].estimatedPrices[0].price}`,9)
  let maxPriorityFeePerGas = ethers.utils.parseUnits(`${res.data.blockPrices[0].estimatedPrices[0].maxPriorityFeePerGas}`,9)
  let maxFeePerGas = ethers.utils.parseUnits(`${res.data.blockPrices[0].estimatedPrices[0].maxFeePerGas}`,9)  
  
  console.log("gasPrice: ",  gasPrice.toString()) 

}  
export function randomUint256(): string {
  return ethers.utils.hexZeroPad(ethers.utils.randomBytes(32), 32);
}  
// test4()  
console.log(randomUint256())
console.log(typeof randomUint256())

//92 162649804
//99000000000 

function test5(){
  let arr = [
    '--token',
    'USDT',
    '--amount',
    '10',
    '--vault',
    '0xffce84569ef60565c35695f81b3b40e3c0805d77b636770dc6fb4a90425d6582'
  ] 

  let arr2 = arr.splice(2,4) 
  console.log(arr2)
} 
test5()